{"version":3,"sources":["Components/Route/registation.module.scss","Components/Route/login.module.scss","Components/ContactList/ContactList.module.scss","Components/Header/header.module.scss","App.module.scss","Components/AddContact/AddContact.module.scss","Components/Header/hasEntered.module.scss","Components/Filter/Filter.module.scss","Components/Preloader/Preloader.module.scss","redux/contact/contact-action.js","redux/contact/contact-selectors.js","Components/AddContact/AddContact.js","redux/contact/contact-opetations.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","Components/PhoneBook/PhoneBook.js","redux/authorization/authorization-actions.js","redux/authorization/authorization-opetations.js","Components/Route/Registration.js","Components/Route/Login.js","redux/authorization/authorization-selectors.js","Components/Route/PrivateRoute.js","Components/Route/PublicRoute.js","Components/Header/HasEntered.js","Components/Header/Header.js","Components/Preloader/Preloader.js","App.js","reportWebVitals.js","redux/contact/contact-reducer.js","redux/authorization/authorization-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","getContacts","state","contact","getFilter","filter","getFilterContacts","createSelector","items","name","toLowerCase","includes","AddContact","contacts","stateTransfer","uuidv4","useState","userName","SetName","number","SetNumber","addContact","e","currentTarget","value","console","log","onSubmit","preventDefault","find","notice","text","htmlFor","className","style","transparent","formInner","onChange","type","pattern","title","required","button","defaultProps","connect","dispatch","a","id","axios","post","data","response","status","error","message","actions","target","lable","filterTodos","deleteTodo","delete","deleteContact","fetchContacts","get","useEffect","list","map","listItem","onClick","PhoneBook","box","registerReauest","registerSuccsess","registerError","loginReauest","loginSuccsess","loginError","logoutRequest","logoutSuccsess","logoutError","getContactsReauest","getContactsSuccsess","getContactsError","defaults","baseURL","token","headers","common","Authorization","mapDispatchToProps","onRegister","user","success","payload","setName","email","setEmail","password","setPassword","getValueInput","boxForm","form","label","input","onLogin","authorized","authorization","getNameAuthorized","loading","Component","component","routeProps","render","props","to","redirectTo","restricted","logOut","boxUser","BoxLoginRegistration","activeClassName","active","LoginRegistration","Preloader","onGetCurrentUser","getState","persistedToken","logger","exact","path","class","Registration","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","initialContactState","loadingLogReg","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","whitelist","store","configureStore","reducer","contactReducer","persistReducer","authorizationReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81af44ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"registation_form__1fctq\",\"input\":\"registation_input__3e1SE\",\"label\":\"registation_label__1rZ0M\",\"button\":\"registation_button__20AOC\",\"Preloader\":\"registation_Preloader__lwk94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__3jh1R\",\"input\":\"login_input__2ZLra\",\"label\":\"login_label__3u1Qf\",\"button\":\"login_button__3boX8\",\"Preloader\":\"login_Preloader__BoI12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__23uem\",\"listItem\":\"ContactList_listItem__24E3u\",\"button\":\"ContactList_button__nNssT\",\"name\":\"ContactList_name__30i4D\",\"number\":\"ContactList_number__3w4CT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoxLoginRegistration\":\"header_BoxLoginRegistration__1pcyK\",\"LoginRegistration\":\"header_LoginRegistration__3UoEe\",\"active\":\"header_active__3FV1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__2LQzJ\",\"title\":\"App_title__k_TtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"AddContact_transparent__K2yME\",\"formInner\":\"AddContact_formInner__1zOQL\",\"button\":\"AddContact_button__3-Xom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxUser\":\"hasEntered_boxUser__3tSlT\",\"name\":\"hasEntered_name__l71Tr\",\"button\":\"hasEntered_button__3x85q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"Filter_lable___H-U_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__2YMqs\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"addContactRequest\");\r\nexport const addContactSuccess = createAction(\"addContactSuccess\");\r\nexport const addContactError = createAction(\"addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\"deleteContactRequest\");\r\nexport const deleteContactSuccess = createAction(\"deleteContactSuccess\");\r\nexport const deleteContactError = createAction(\"deleteContactError\");\r\n\r\nexport const filterContactRequest = createAction(\"filterContactRequest\");\r\nexport const filterContactSuccess = createAction(\"filterContactSuccess\");\r\nexport const filterContactError = createAction(\"filterContactError\");\r\n\r\nexport const filterContact = createAction(\"filterContact\");\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => {\r\n  return state.contact;\r\n};\r\n\r\nexport const getFilter = (state) => {\r\n  return state.contact.filter;\r\n};\r\n\r\nexport const getContactsItem = (state) => {\r\n  return state.contact.items;\r\n};\r\n\r\nexport const getFilterContacts = createSelector(\r\n  [getContactsItem, getFilter],\r\n  (items, filter) => {\r\n    return items.filter(({ name }) => name.toLowerCase().includes(filter));\r\n  }\r\n);\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport style from './AddContact.module.scss'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { addContact } from '../../redux/contact/contact-opetations'\r\nimport { getContacts } from '../../redux/contact/contact-selectors'\r\n\r\nimport '@pnotify/core/dist/BrightTheme.css'\r\nimport { notice } from '@pnotify/core'\r\nimport '@pnotify/core/dist/PNotify.css'\r\n\r\nconst AddContact = ({ contacts, stateTransfer, uuidv4 }) => {\r\n  const [userName, SetName] = useState('')\r\n  const [number, SetNumber] = useState('')\r\n\r\n  const alerError = () => {\r\n    return contacts.items.find(({ name }) => {\r\n      return name === userName\r\n    })\r\n  }\r\n\r\n  const submitformContact = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (alerError()) {\r\n      notice({ text: `${userName} is alreaady in contacts` })\r\n      return\r\n    }\r\n    stateTransfer({ number, name: userName })\r\n\r\n    SetName('')\r\n    SetNumber('')\r\n  }\r\n\r\n  const addContact = (e) => {\r\n    const { value, name } = e.currentTarget\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        SetName(value)\r\n        break\r\n      case 'number':\r\n        SetNumber(value)\r\n        break\r\n\r\n      default:\r\n        console.log('error')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={submitformContact}\r\n      htmlFor={uuidv4()}\r\n      className={style.transparent}\r\n    >\r\n      <div className={style.formInner}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={addContact}\r\n            type=\"text\"\r\n            value={userName}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            onChange={addContact}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={style.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n// class AddContact extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n// alerError = () => {\r\n//   return this.props.contacts.items.find(({ name }) => {\r\n//     return name === this.state.name;\r\n//   });\r\n// };\r\n\r\n// submitformContact = (e) => {\r\n//   e.preventDefault();\r\n\r\n//   if (this.alerError()) {\r\n//     notice({ text: `${this.state.name} is alreaady in contacts` });\r\n//     return;\r\n//   }\r\n//   this.props.stateTransfer(this.state);\r\n\r\n//   this.setState({ name: \"\", number: \"\" });\r\n// };\r\n\r\n// addContact = (e) => {\r\n//   const { value, name } = e.currentTarget;\r\n\r\n//   this.setState({ [name]: value });\r\n// };\r\n\r\n//   render() {\r\n//     const { number, name } = this.state;\r\n//     return (\r\n//       <form\r\n//         onSubmit={this.submitformContact}\r\n//         htmlFor={this.props.uuidv4()}\r\n//         className={style.transparent}\r\n//       >\r\n//         <div className={style.formInner}>\r\n//           <label>\r\n//             Name\r\n//             <input\r\n//               onChange={this.addContact}\r\n//               type=\"text\"\r\n//               value={name}\r\n//               name=\"name\"\r\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//           <label>\r\n//             Number\r\n//             <input\r\n//               onChange={this.addContact}\r\n//               type=\"tel\"\r\n//               value={number}\r\n//               name=\"number\"\r\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//           <button className={style.button} type=\"submit\">\r\n//             Add contact\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\nAddContact.propTypes = {\r\n  contacts: PropTypes.object,\r\n  uuidv4: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  number: PropTypes.number,\r\n  stateTransfer: PropTypes.func,\r\n}\r\nAddContact.defaultProps = {\r\n  contacts: [],\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  stateTransfer: (value) => dispatch(addContact(value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact)\r\n","import axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contact-action\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport { error } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const contact = { name, number, id: uuidv4() };\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/contacts\", contact);\r\n\r\n      dispatch(addContactSuccess(data));\r\n    } catch (errors) {\r\n      if (errors.response.status === 400) {\r\n        error({\r\n          text: \"ERROR, Contact creation error\",\r\n        });\r\n      }\r\n      dispatch(addContactError(errors.message));\r\n    }\r\n  };\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (errors) {\r\n    if (errors.response.status === 404) {\r\n      error({\r\n        text: \"ERROR, there is no such owner's collection\",\r\n      });\r\n    } else if (errors.response.status === 500) {\r\n      error({\r\n        text: \"ERROR server\",\r\n      });\r\n    }\r\n    dispatch(deleteContactError(errors.message));\r\n  }\r\n};\r\n\r\nexport const fetchContact = () => async (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (errors) {\r\n    if (errors.response.status === 404) {\r\n      error({\r\n        text: \"ERROR, there is no such owner's collection\",\r\n      });\r\n    } else if (errors.response.status === 500) {\r\n      error({\r\n        text: \"ERROR server\",\r\n      });\r\n    }\r\n    dispatch(fetchContactError(errors.message));\r\n  }\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../redux/contact/contact-action\";\r\nimport { getFilter } from \"../../redux/contact/contact-selectors\";\r\n\r\nconst Filter = ({ filterContact, filter }) => {\r\n  return (\r\n    <input\r\n      className={style.lable}\r\n      type=\"text\"\r\n      onChange={filterContact}\r\n      value={filter}\r\n    />\r\n  );\r\n};\r\n\r\n// class Filter extends Component {\r\n//   state = {\r\n//     filter: \"\",\r\n//   };\r\n\r\n// render() {\r\n//   const { filterContact, filter } = this.props;\r\n//   return (\r\n//     <input\r\n//       className={style.lable}\r\n//       type=\"text\"\r\n//       onChange={filterContact}\r\n//       value={filter}\r\n//     />\r\n//   );\r\n// }\r\n// }\r\n\r\nFilter.propTypes = {\r\n  filterContact: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterContact: (e) => dispatch(actions.filterContact(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.scss\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contact/contact-opetations\";\r\nimport { fetchContact } from \"../../redux/contact/contact-opetations\";\r\nimport { getFilterContacts } from \"../../redux/contact/contact-selectors\";\r\n\r\nconst ContactList = ({ fetchContacts, filterTodos, deleteTodo, uuidv4 }) => {\r\n  useEffect(() => fetchContacts(), [fetchContacts]);\r\n  return (\r\n    <>\r\n      <ul className={style.list}>\r\n        {filterTodos.map(({ name, number, id }) => (\r\n          <li key={uuidv4()} className={style.listItem}>\r\n            <p className={style.name}>{name}</p>\r\n            <span className={style.number}>{number}</span>\r\n            <button\r\n              className={style.button}\r\n              type=\"button\"\r\n              onClick={() => deleteTodo(id)}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\n// class ContactList extends Component {\r\n//   componentDidMount = () => {\r\n//     this.props.fetchContact();\r\n//   };\r\n\r\n//   render() {\r\n//     const { filterTodos, deleteTodo, uuidv4 } = this.props;\r\n\r\n// return (\r\n//   <>\r\n//     <ul className={style.list}>\r\n//       {filterTodos.map(({ name, number, id }) => (\r\n//         <li key={uuidv4()} className={style.listItem}>\r\n//           <p className={style.name}>{name}</p>\r\n//           <span className={style.number}>{number}</span>\r\n//           <button\r\n//             className={style.button}\r\n//             type=\"button\"\r\n//             onClick={() => deleteTodo(id)}\r\n//           >\r\n//             Удалить\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   </>\r\n// );\r\n//   }\r\n// }\r\n\r\nContactList.propTypes = {\r\n  filterTodos: PropTypes.array,\r\n  uuidv4: PropTypes.func,\r\n  deleteTodo: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterTodos: getFilterContacts(state),\r\n  // isLoadingItems: state.contact.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteTodo: (id) => dispatch(deleteContact(id)),\r\n  fetchContacts: () => dispatch(fetchContact()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import \"../../App.css\";\r\nimport style from \"../../App.module.scss\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AddContact from \"../AddContact\";\r\nimport Filter from \"../Filter\";\r\nimport ContactList from \"../ContactList\";\r\n\r\nexport const PhoneBook = () => {\r\n  return (\r\n    <div className={style.box}>\r\n      <h1 className={style.title}>Phonebook</h1>\r\n      <AddContact uuidv4={uuidv4} />\r\n      <h2 className={style.title}>Contacts</h2>\r\n      <Filter uuidv4={uuidv4} />\r\n      <ContactList uuidv4={uuidv4} />\r\n    </div>\r\n  );\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerReauest = createAction(\"/authorization/registerReauest\");\r\nexport const registerSuccsess = createAction(\"/authorization/registerSuccsess\");\r\nexport const registerError = createAction(\"/authorization/registerError\");\r\n\r\nexport const loginReauest = createAction(\"/authorization/loginReauest\");\r\nexport const loginSuccsess = createAction(\"/authorization/loginSuccsess\");\r\nexport const loginError = createAction(\"/authorization/loginError\");\r\n\r\nexport const logoutRequest = createAction(\"/authorization/logoutReauest\");\r\nexport const logoutSuccsess = createAction(\"/authorization/logoutSuccsess\");\r\nexport const logoutError = createAction(\"/authorization/logoutError\");\r\n\r\nexport const getContactsReauest = createAction(\r\n  \"/authorization/getContactsReauest\"\r\n);\r\nexport const getContactsSuccsess = createAction(\r\n  \"/authorization/getContactsSuccsess\"\r\n);\r\nexport const getContactsError = createAction(\"/authorization/getContactsError\");\r\n","import axios from \"axios\";\r\nimport {\r\n  registerReauest,\r\n  registerSuccsess,\r\n  registerError,\r\n  loginReauest,\r\n  loginSuccsess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccsess,\r\n  logoutError,\r\n  getContactsReauest,\r\n  getContactsSuccsess,\r\n  getContactsError,\r\n} from \"./authorization-actions\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport { success, error } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const register = (user) => async (dispatch) => {\r\n  dispatch(registerReauest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", user);\r\n    token.set(data.token);\r\n    dispatch(registerSuccsess(data));\r\n    success({ text: \"Created!\" });\r\n  } catch (errors) {\r\n    if (errors.response.status === 400) {\r\n      error({\r\n        text: \"ERROR, user creation error\",\r\n      });\r\n    } else if (errors.response.status === 500) {\r\n      error({\r\n        text: \"ERROR server\",\r\n      });\r\n    }\r\n    dispatch(registerError(errors.payload));\r\n  }\r\n};\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n  dispatch(loginReauest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", user);\r\n    token.set(data.token);\r\n    dispatch(loginSuccsess(data));\r\n    success({ text: \"Success!\" });\r\n  } catch (errors) {\r\n    error({\r\n      text: \"ERROR, wrong login or password\",\r\n    });\r\n\r\n    dispatch(loginError(errors.payload));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n\r\n    dispatch(logoutSuccsess());\r\n  } catch (errors) {\r\n    error({\r\n      text: \"ERROR, failed to exit\",\r\n    });\r\n\r\n    dispatch(logoutError(errors.payload));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    authorization: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  dispatch(getContactsReauest());\r\n\r\n  try {\r\n    token.set(persistedToken);\r\n    const { data } = await axios.get(\"/users/current\");\r\n\r\n    dispatch(getContactsSuccsess(data));\r\n  } catch (errors) {\r\n    error({\r\n      text: \"ERROR, the request failed\",\r\n    });\r\n    dispatch(getContactsError(errors.payload));\r\n  }\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { register } from \"../../redux/authorization/authorization-opetations\";\r\nimport style from \"./registation.module.scss\";\r\nimport { useState } from \"react\";\r\n\r\nconst Registration = ({ onRegister }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    onRegister({ name, email, password });\r\n  };\r\n\r\n  const getValueInput = (e) => {\r\n    const { value, name } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      default:\r\n        console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.boxForm}>\r\n      <form onSubmit={submitForm} className={style.form}>\r\n        <label className={style.label}>\r\n          Name\r\n          <input\r\n            className={style.input}\r\n            type=\"name\"\r\n            name=\"name\"\r\n            onChange={getValueInput}\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={style.label}>\r\n          Email\r\n          <input\r\n            className={style.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={getValueInput}\r\n            title=\"Enter your email\"\r\n          />\r\n        </label>\r\n        <label className={style.label}>\r\n          Password\r\n          <input\r\n            className={style.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={getValueInput}\r\n            title=\"Пароль должен состоять из цифр и букв\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={style.button}>\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n// class Registration extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   };\r\n\r\n// submitForm = (e) => {\r\n//   e.preventDefault();\r\n\r\n//   this.props.onRegister(this.state);\r\n// };\r\n\r\n// getValueInput = (e) => {\r\n//   const { value, name } = e.currentTarget;\r\n//   this.setState({ [name]: value });\r\n// };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n// return (\r\n//   <div className={style.boxForm}>\r\n//     <form onSubmit={this.submitForm} className={style.form}>\r\n//       <label className={style.label}>\r\n//         Name\r\n//         <input\r\n//           className={style.input}\r\n//           type=\"name\"\r\n//           name=\"name\"\r\n//           onChange={this.getValueInput}\r\n//           value={name}\r\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <label className={style.label}>\r\n//         Email\r\n//         <input\r\n//           className={style.input}\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           value={email}\r\n//           onChange={this.getValueInput}\r\n//           title=\"Enter your email\"\r\n//         />\r\n//       </label>\r\n//       <label className={style.label}>\r\n//         Password\r\n//         <input\r\n//           className={style.input}\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           value={password}\r\n//           onChange={this.getValueInput}\r\n//           title=\"Пароль должен состоять из цифр и букв\"\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <button type=\"submit\" className={style.button}>\r\n//         Register\r\n//       </button>\r\n//     </form>\r\n//   </div>\r\n// );\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Registration);\r\n","import { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/authorization/authorization-opetations\";\r\nimport style from \"./login.module.scss\";\r\nimport { useState } from \"react\";\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    onLogin({ email, password });\r\n  };\r\n\r\n  const getValueInput = (e) => {\r\n    const { value, name } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        break;\r\n\r\n      default:\r\n        console.log(\"error\");\r\n    }\r\n  };\r\n  return (\r\n    <div className={style.boxForm}>\r\n      <form onSubmit={submitForm} className={style.form}>\r\n        <label className={style.label}>\r\n          Email\r\n          <input\r\n            className={style.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            title=\"Enter your email\"\r\n            onChange={getValueInput}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={style.label}>\r\n          Password\r\n          <input\r\n            className={style.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={getValueInput}\r\n            title=\"Enter your password\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={style.button}>\r\n          Sing in\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// class Login extends Component {\r\n//   state = {\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   };\r\n\r\n// submitForm = (e) => {\r\n//   e.preventDefault();\r\n\r\n//   this.props.onLogin(this.state);\r\n// };\r\n\r\n// getValueInput = (e) => {\r\n//   const { value, name } = e.currentTarget;\r\n//   this.setState({ [name]: value });\r\n// };\r\n\r\n//   render() {\r\n//     const { email, password } = this.state;\r\n// return (\r\n//   <div className={style.boxForm}>\r\n//     <form onSubmit={this.submitForm} className={style.form}>\r\n//       <label className={style.label}>\r\n//         Email\r\n//         <input\r\n//           className={style.input}\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           value={email}\r\n//           title=\"Enter your email\"\r\n//           onChange={this.getValueInput}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <label className={style.label}>\r\n//         Password\r\n//         <input\r\n//           className={style.input}\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           value={password}\r\n//           onChange={this.getValueInput}\r\n//           title=\"Enter your password\"\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <button type=\"submit\" className={style.button}>\r\n//         Sing in\r\n//       </button>\r\n//     </form>\r\n//   </div>\r\n// );\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = {\r\n  onLogin: login,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","export const authorized = (state) => state.authorization.authorization\r\nexport const getNameAuthorized = (state) => state.authorization.user.name\r\nexport const loading = (state) => state.contact.loading\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { authorized } from \"../../redux/authorization/authorization-selectors\";\r\n\r\nconst PrivateRoute = ({ component: Component, authorized, ...routeProps }) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      authorized ? <Component {...props} /> : <Redirect to=\"/Login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorized: authorized(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { authorized } from \"../../redux/authorization/authorization-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  authorized,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      authorized && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorized: authorized(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { connect } from \"react-redux\";\r\nimport { getNameAuthorized } from \"../../redux/authorization/authorization-selectors\";\r\nimport { logout } from \"../../redux/authorization/authorization-opetations\";\r\nimport style from \"./hasEntered.module.scss\";\r\n\r\nconst HasEntered = ({ name, logOut }) => {\r\n  return (\r\n    <div className={style.boxUser}>\r\n      <h3 className={style.name}>{name}</h3>\r\n      <button type=\"button\" onClick={logOut} className={style.button}>\r\n        logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: getNameAuthorized(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logOut: logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HasEntered);\r\n","import { connect } from 'react-redux'\r\n// import { DidNotEnter } from \"./DidNotEnter\";\r\nimport HasEntered from './HasEntered'\r\nimport { authorized } from '../../redux/authorization/authorization-selectors'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './header.module.scss'\r\n\r\nconst Header = ({ authorized }) => {\r\n  return (\r\n    <>\r\n      {authorized ? (\r\n        <HasEntered />\r\n      ) : (\r\n        <ul className={style.BoxLoginRegistration}>\r\n          <li>\r\n            <NavLink\r\n              to={'/Registration'}\r\n              activeClassName={style.active}\r\n              className={style.LoginRegistration}\r\n            >\r\n              Registration\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to={'/Login'}\r\n              activeClassName={style.active}\r\n              className={style.LoginRegistration}\r\n            >\r\n              sing in\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorized: authorized(state),\r\n})\r\nexport default connect(mapStateToProps)(Header)\r\n","import style from \"./Preloader.module.scss\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <div className={style.Preloader}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n","import './App.css'\r\nimport { PhoneBook } from './Components/PhoneBook'\r\nimport Registration from './Components/Route/Registration'\r\nimport Login from './Components/Route/Login'\r\nimport { connect } from 'react-redux'\r\nimport { getCurrentUser } from './redux/authorization/authorization-opetations'\r\nimport PrivateRoute from './Components/Route/PrivateRoute'\r\nimport PublicRoute from './Components/Route/PublicRoute'\r\n\r\nimport { useEffect } from 'react'\r\nimport Header from './Components/Header/Header'\r\nimport { Switch, Redirect } from 'react-router-dom'\r\nimport { loading } from './redux/authorization/authorization-selectors'\r\nimport { Preloader } from './Components/Preloader/'\r\n\r\nexport const App = ({ logger, onGetCurrentUser }) => {\r\n  useEffect(() => onGetCurrentUser(), [onGetCurrentUser])\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {logger && <Preloader />}\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\" component={PhoneBook} />\r\n\r\n        <PublicRoute\r\n          class\r\n          path=\"/Registration\"\r\n          redirectTo=\"/\"\r\n          restricted\r\n          component={Registration}\r\n        />\r\n        <PublicRoute\r\n          path=\"/Login\"\r\n          redirectTo=\"/\"\r\n          restricted\r\n          component={Login}\r\n        />\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\n// class App extends Component {\r\n//   componentDidMount() {\r\n//     this.props.onGetCurrentUser();\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <Header />\r\n//         {this.props.logger && <Preloader />}\r\n//         <Switch>\r\n//           <PrivateRoute exact path=\"/\" component={PhoneBook} />\r\n\r\n//           <PublicRoute\r\n//             class\r\n//             path=\"/Registration\"\r\n//             redirectTo=\"/\"\r\n//             restricted\r\n//             component={Registration}\r\n//           />\r\n//           <PublicRoute\r\n//             path=\"/Login\"\r\n//             redirectTo=\"/\"\r\n//             restricted\r\n//             component={Login}\r\n//           />\r\n//         </Switch>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: getCurrentUser,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  logger: loading(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  filterContact,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"../../redux/contact/contact-action\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  registerReauest,\r\n  registerSuccsess,\r\n  registerError,\r\n  loginReauest,\r\n  loginSuccsess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccsess,\r\n  logoutError,\r\n  getContactsReauest,\r\n  getContactsSuccsess,\r\n  getContactsError,\r\n} from \"./authorization-actions\";\r\nconst initialContactState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialContactState, {\r\n  [registerSuccsess]: (_, { payload }) => payload.user,\r\n  [loginSuccsess]: (_, { payload }) => payload.user,\r\n  [logoutSuccsess]: () => initialContactState,\r\n  [getContactsSuccsess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccsess]: (_, { payload }) => payload.token,\r\n  [loginSuccsess]: (_, { payload }) => payload.token,\r\n  [logoutSuccsess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getContactsError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst authorization = createReducer(false, {\r\n  [registerSuccsess]: () => true,\r\n  [loginSuccsess]: () => true,\r\n  [getContactsSuccsess]: () => true,\r\n  [logoutSuccsess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutError]: () => false,\r\n  [getContactsError]: () => false,\r\n});\r\n\r\nconst loadingLogReg = createReducer(false, {\r\n  [registerReauest]: () => true,\r\n  [registerSuccsess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginReauest]: () => true,\r\n  [loginSuccsess]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutRequest]: () => true,\r\n  [logoutSuccsess]: () => false,\r\n  [logoutError]: () => false,\r\n  [getContactsReauest]: () => true,\r\n  [getContactsSuccsess]: () => false,\r\n  [getContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  loadingLogReg,\r\n  authorization,\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import contactReducer from \"./contact/contact-reducer\";\r\nimport authorizationReducer from \"./authorization/authorization-reducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: \"token\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: contactReducer,\r\n    authorization: persistReducer(persistConfig, authorizationReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storePersistor = { store, persistor };\r\n\r\nexport default storePersistor;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store.store}>\r\n        <PersistGate loading={null} persistor={store.persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}